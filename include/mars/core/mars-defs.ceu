#ifndef _CEU_MARS_DEFS
#define _CEU_MARS_DEFS

#define LOCALHOST "0.0.0.0"
#define PORT 8888
#define BACKLOG 128

/**** MESSAGE CODES ****/
/* peers -> server */
#define P_JOIN                10
#define P_REGULAR_SEND        11
#define P_CONCURRENT_SEND     12
#define P_ORDERED_SEND        13

/* server -> peers */
#define S_JOINED              20
#define S_NEW_PEER            21
#define S_BROADCAST           22

/* event codes */
#define EVT_KEY                0
#define EVT_SCENE_CLICK        1
#define EVT_PLAYER_CLICK       2
/* more? */

native/pre do
  ##include <time.h>
  ##include <string.h>

  long long unsigned int now (void)
  {
    struct timespec ts;
    clock_gettime(CLOCK_REALTIME, &ts);
    return (long long unsigned int)ts.tv_sec * 1000000000L + ts.tv_nsec;
  }

##ifdef DEBUG
 ##undef DEBUG
 ##define DEBUG 1
##else
 ##define DEBUG 0
##endif

##define PTR(x) x

#define debug(fmt, ...) \
  do { if (DEBUG) fprintf(stderr, "%s:%d: " fmt, __FILE__, \
      __LINE__, __VA_ARGS__); } while (0)

end

native/nohold
  _now,
  _debug,
;

native/pure
  _PTR,
;

[[
   function serialize (o)
     local result = '{'
     for k,v in pairs(o) do
       result = result ..  k .. '='
       if type (v) == 'string' then
         result = result .. "'" .. v .. "',"
       else
         result = result .. tostring(v) .. ','
       end
     end
     result = result .. '}'
     return result
   end
]]

code/tight Str_Cat (var&[] byte vet, var&[] byte payload) -> none do
  $vet = $vet - 1;
  vet = vet .. payload;
end

code/tight Clear_Vector (var&[] byte vet) -> none do
  $vet = 0;
end

#endif

