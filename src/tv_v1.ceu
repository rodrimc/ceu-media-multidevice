#include "mars/util/mars-media.ceu"

var _char&& name;
(name, _) = await JOINED;
var bool im_tv = _strcmp (name, "TV") == 0;

_printf ("im_tv: %d\n", im_tv);

par do
  if im_tv then
    /* tv.ceu */
    input (int) CONTROL_KEY;

    var Size size = val Size (720, 480);
    var Media.Video video = val Media.Video (
                    [] .. "resources/bunny.ogg",
                    Region (0, 0, size.width, size.height, 1),
                    1.0,
                    1.0);

    var&? Scene scene = spawn Scene(size);
    watching scene do
      var int key = await CONTROL_KEY until key == 0;
      spawn Play (&scene.scene, &video);

      every key in CONTROL_KEY do
        _printf ("key: %d\n", key);
      end
    end
  end
with
  if not im_tv then
    /* control.ceu */
    output (int) PLAY_PAUSE;

    var Size size = val Size (300, 200);
    var&? Scene scene = spawn Scene(size);

    watching scene do
      var bool press;
      var _char_ptr_ext key;
      every (_, key, press) in CM_SCENE_KEY do
        if press and  _strcmp(key, "space") == 0 then
          emit PLAY_PAUSE (0);
        end
      end
    end
  end
end
