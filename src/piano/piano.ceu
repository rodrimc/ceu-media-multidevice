#include "mars/util/mars-media.ceu"

var int key_width = 90;
var int key_height = 430;

var int sharp_width = 38;
var int sharp_height = 315;

#define C  1
#define CS 2
#define D  3 
#define DS 4 
#define E  5 
#define F  6
#define FS 7 
#define G  8 
#define GS 9 
#define A  10 
#define AS 11 
#define B  12 

#include "media.ceu"

output (int) NOTE;
input (int) PLAY;

code/await Play_Note (var int note, var& IScene s, pool& [] Play ps) -> none
do
  if note == C then
    par/or do
      await Play (&s, &outer.c_sound);
    with
      await Play (&s, &outer.c_sel);
    with
      await 1s;
    end
  else/if note == CS then
    par/or do
      await Play (&s, &outer.cs_sound);
    with
      await Play (&s, &outer.cs_sel);
    with
      await 1s;
    end
  else/if note == D then
    par/or do
      await Play (&s, &outer.d_sound);
    with
      await Play (&s, &outer.d_sel);
    with
      await 1s;
    end
  else/if note == DS then
    par/or do
      await Play (&s, &outer.ds_sound);
    with
      await Play (&s, &outer.ds_sel);
    with
      await 1s;
    end
  else/if note == E then
    par/or do
      await Play (&s, &outer.e_sound);
    with
      await Play (&s, &outer.e_sel);
    with
      await 1s;
    end
  else/if note == F then
    par/or do
      await Play (&s, &outer.f_sound);
    with
      await Play (&s, &outer.f_sel);
    with
      await 1s;
    end
  else/if note == FS then
    par/or do
      await Play (&s, &outer.fs_sound);
    with
      await Play (&s, &outer.fs_sel);
    with
      await 1s;
    end
  else/if note == G then
    par/or do
      await Play (&s, &outer.g_sound);
    with
      await Play (&s, &outer.g_sel);
    with
      await 1s;
    end
  else/if note == GS then
    par/or do
      await Play (&s, &outer.gs_sound);
    with
      await Play (&s, &outer.gs_sel);
    with
      await 1s;
    end
  else/if note == A then
    par/or do
      await Play (&s, &outer.a_sound);
    with
      await Play (&s, &outer.a_sel);
    with
      await 1s;
    end
  else/if note == AS then
    par/or do
      await Play (&s, &outer.as_sound);
    with
      await Play (&s, &outer.as_sel);
    with
      await 1s;
    end
  else/if note == B then
    par/or do
      await Play (&s, &outer.b_sound);
    with
      await Play (&s, &outer.b_sel);
    with
      await 1s;
    end
  end
end

var&? Scene s = spawn Scene (Size(635, 434));
watching s do

  var&? Play c_play;
  var&? Play cs_play;
  var&? Play d_play;
  var&? Play ds_play;
  var&? Play e_play;
  var&? Play f_play;
  var&? Play fs_play;
  var&? Play g_play;
  var&? Play gs_play;
  var&? Play a_play;
  var&? Play as_play;
  var&? Play b_play;

  pool [] Play ps;
  pool [] Play_Note pn;

  par do
    c_play = spawn Play (&s.scene, &c) in ps;
  with
    cs_play = spawn Play (&s.scene, &cs) in ps;
  with
    d_play = spawn Play (&s.scene, &d) in ps;
  with
    ds_play = spawn Play (&s.scene, &ds) in ps;
  with
    e_play = spawn Play (&s.scene, &e) in ps;
  with
    f_play = spawn Play (&s.scene, &f) in ps;
  with
    fs_play = spawn Play (&s.scene, &fs) in ps;
  with
    g_play = spawn Play (&s.scene, &g) in ps;
  with
    gs_play = spawn Play (&s.scene, &gs) in ps;
  with
    a_play = spawn Play (&s.scene, &a) in ps;
  with
    as_play = spawn Play (&s.scene, &as_) in ps;
  with
    b_play = spawn Play (&s.scene, &b) in ps;
  with
    var uint obj;
    var bool press;
    every (obj, _, _,_, press) in CM_PLAYER_MOUSE_CLICK do
      if press then
        if obj == c_play!.player.self then
          emit NOTE (C);

        else/if obj == cs_play!.player.self then
          emit NOTE (CS);

        else/if obj == d_play!.player.self then
          emit NOTE (D);
          
        else/if obj == ds_play!.player.self then
          emit NOTE (DS);
          
        else/if obj == e_play!.player.self then
          emit NOTE (E);

        else/if obj == f_play!.player.self then
          emit NOTE (F);

        else/if obj == fs_play!.player.self then
          emit NOTE (FS);

        else/if obj == g_play!.player.self then
          emit NOTE (G);

        else/if obj == gs_play!.player.self then
          emit NOTE (GS);

        else/if obj == a_play!.player.self then
          emit NOTE (A);

        else/if obj == as_play!.player.self then
          emit NOTE (AS);

        else/if obj == b_play!.player.self then
          emit NOTE (B);
        end
      end
    end
  with
    var int note;
    every note in PLAY do 
      spawn Play_Note (note, &s.scene, &ps) in pn;
    end
  end
end
